% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_lollipop_plot.R
\name{pretty_lollipop_plot}
\alias{pretty_lollipop_plot}
\title{Pretty Lollipop Plot.}
\usage{
pretty_lollipop_plot(
  maf_df,
  these_samples_metadata,
  gene,
  plot_title,
  refseq_id = NULL,
  by_allele = TRUE,
  max_count = 10,
  include_silent = FALSE,
  label_threshold = 5,
  labelPos = NULL,
  labelHGVSp = NULL,
  mirror = FALSE,
  font_size = 11,
  font = "sans",
  show_rate = FALSE,
  title_size = 14,
  x_axis_size = 10,
  domain_label_size = 4,
  aa_label_size = 3
)
}
\arguments{
\item{maf_df}{A data frame containing the mutation data.}

\item{these_samples_metadata}{Required argument. A data.frame with metadata.}

\item{gene}{The gene symbol to plot.}

\item{plot_title}{Optional, the title of the plot. Default is gene.}

\item{refseq_id}{Insert a specific NM_xxx value of interest}

\item{by_allele}{Set to FALSE to consider all mutations at the same codon as equivalent.
When FALSE, and combined with labelPos, the labels will only indicate the amino acid number. Default is TRUE.}

\item{max_count}{Sets the mutation count for the largest lollipop size. Default is 10.}

\item{include_silent}{Logical parameter indicating whether to include silent mutations into coding mutations. Default is FALSE.}

\item{label_threshold}{Minimum mutation recurrence for labels to appear on plot. Superseded by either labelPos or labelHGVSp. Default set to 5.}

\item{labelPos}{A vector of amino acid positions that should be labeled on the plot (i.e. c("28", "315")). If unset, label_threshold is used to determine which positions to label.}

\item{labelHGVSp}{A character vector of values from HGVSp_Short (i.e. c("p.G28D", "p.E315K")) that will be labeled on the plot.}

\item{font_size}{Customizable font size for the CoLollipop plot somatic mutation rate and comparison labels. Default is 11pt font.}

\item{font}{Customizable font for all plotting elements. Default is "sans" which uses the system default font. Use `systemfonts::match_fonts(font)` to confirm if your requested font is available.}

\item{show_rate}{Boolean parameter indicating whether to show the somatic mutation rate in the plot title. Default is FALSE.,}

\item{title_size}{Font size for the plot title. Default is 14.}

\item{x_axis_size}{Font size for the x-axis labels. Default is 10.}

\item{domain_label_size}{Font size for the protein domain labels. Default is 4.}

\item{aa_label_size}{Font size for the amino acid labels. Default is 3.}
}
\value{
A list of plot and data objects.
}
\description{
Generates a visually appealing lollipop plot.
}
\details{
Retrieve maf data of a specific sample or a set of samples. A gene of interest
can then be visualized with the given maf data. Silent mutations can be visualized setting
include_silent to TRUE.
}
\examples{
library(GAMBLR.open)
suppressMessages(
  suppressWarnings({

#get meta data (BL_Thomas)
metadata <- get_gambl_metadata() \%>\%
    filter(seq_type == "genome") \%>\%
    check_and_clean_metadata(.,duplicate_action="keep_first")

maf_df <- get_coding_ssm(
    these_samples_metadata = metadata
)

#construct pretty_lollipop_plot.
lolipop_result <- pretty_lollipop_plot(maf_df, these_samples_metadata = metadata, "DDX3X")
print(lolipop_result)
}))

\dontrun{
 # Or, with GAMBLR.results:
 library(GAMBLR.results)
 metadata <- get_gambl_metadata() \%>\%
    dplyr::filter(pathology == "BL")

maf_df <- get_all_coding_ssm(
    these_samples_metadata = metadata
)
lolipop_result <- pretty_lollipop_plot(maf_df, these_samples_metadata = metadata, "DDX3X")
lolipop_result
}
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fancy_v_count.R
\name{fancy_v_count}
\alias{fancy_v_count}
\title{Total n variants count plot.}
\usage{
fancy_v_count(
  this_maf,
  this_maf_path = NULL,
  this_bedpe,
  this_bedpe_path = NULL,
  ssm = TRUE,
  plot_title = paste0(this_sample_id),
  plot_subtitle = "Variant Count For Selected Contigs",
  chr_select = paste0("chr", c(1:22)),
  variant_select = c("DEL", "INS", "DUP"),
  snp_colours = c(SNP = "#2B9971", DNP = "#993F2B", TNP = "#A62656"),
  hide_legend = FALSE,
  log10_y = FALSE
)
}
\arguments{
\item{this_maf}{Parameter with maf like df already loaded into R.}

\item{this_maf_path}{Parameter with path to external maf like file.}

\item{this_bedpe}{Parameter with bedpe like df already loaded into R.}

\item{this_bedpe_path}{Parameter with path to external bedpe like file.}

\item{ssm}{Set to FALSE to get plotting data from get_combined_sv (SVs). Default value is TRUE (plots SSM retrieved from annotate_cn_by_ssm$maf).}

\item{plot_title}{Title of plot (default to sample ID).}

\item{plot_subtitle}{Subtitle for created plot.}

\item{chr_select}{vector of chromosomes to be included in plot, defaults to autosomes.}

\item{variant_select}{Subtypes of SVs to be included in plot, default is DEL, INS and DUP.}

\item{snp_colours}{Optional vector with colours for SNPs (DNP and TNP).}

\item{hide_legend}{Set to True to remove legend from plot, default is FALSE.}

\item{log10_y}{Set to TRUE to force y axis to be in log10.}
}
\value{
A plot as a ggplot object (grob).
}
\description{
Generate a bar plot visualizing total variant (SSM or SVs) count for selected contigs.
}
\details{
This function creates a barplot showing the total number of variants for a selected sample.
Convenience parameters for restricting the returned plot are available. For example, with `ssm` (Boolean)
you can toggle if the plot will be in respect to SSM (`ssm = TRUE`) or if you wish to count SVs (`ssm = FALSE`).
In addition, this plot can also accept a variety of incoming data types. Either, you supply the function with a sample ID
(`this_sample_id`) and the function will retrieve data using [GAMBLR::assign_cn_to_ssm] or [GAMBLR::get_combined_sv] (depending on how the `ssm` parameter is used).
This function also supports a maf or maf-like data frame directly, this is done with `maf_data` or `maf_path`. If data is supplied with either of these parameters,
the user can specify what column holds the variant type information as well as chromosome information (`variant_type_col` and `chromosome_col`).
Restricting the plot to coding mutations is done with `coding_only = TRUE`. Flat-file and augmented maf options can be toggled with `from_flatfile`
and `use_augmented_maf`. Both are TRUE by default and should rarely be set to FALSE. Lastly, this plotting function also have convenient parameters for
customizing the returned plot, e.g `plot_title`, `y_interval`, `hide_legend`, and`plot_subtitle` and `snp_colours`. lastly, it is also possible
to control what variants are to be counted with `variant_select`. Default is deletions, insertions and duplications, c("DEL", "DUP", "INS"). Not that
the variant types specified in this parameter must match with whatever is present in the corresponding `variant_type_col`.
}
\examples{
#count all variants for one sample (default parameters)
fancy_v_count(this_sample_id = "HTMCP-01-06-00422-01A-01D")

#count and plot all variants on chromosome 1
fancy_v_count(this_sample_id = "HTMCP-01-06-00422-01A-01D",
              chr_select = c("chr1"))

}

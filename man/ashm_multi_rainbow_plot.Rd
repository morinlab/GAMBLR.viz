% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ashm_multi_rainbow_plot.R
\name{ashm_multi_rainbow_plot}
\alias{ashm_multi_rainbow_plot}
\title{ASHM Multi-panel Rainbow Plot}
\usage{
ashm_multi_rainbow_plot(
  this_maf,
  regions_bed,
  regions_to_display,
  exclude_classifications,
  metadata,
  custom_colours,
  classification_column = "lymphgen",
  verbose = TRUE
)
}
\arguments{
\item{this_maf}{An already loaded maf. This parameter is required.}

\item{regions_bed}{Bed file with chromosome coordinates, should contain columns chr, start, end, name (with these exact names).}

\item{regions_to_display}{Optional vector of names from default regions_bed to use.}

\item{exclude_classifications}{Optional argument for excluding specific classifications from a metadata file.}

\item{metadata}{A metadata file already subsetted and arranged on the order you want the samples vertically displayed.}

\item{custom_colours}{Provide named vector (or named list of vectors) containing custom annotation colours if you do not want to use standardized pallette.}

\item{classification_column}{Optional. Override default column for assigning the labels used for colouring in the figure.}

\item{verbose}{Set to FALSE to prevent printing the full regions bed file to the console. Default is TRUE.}
}
\value{
Nothing
}
\description{
Generates a colourful multi-panel overview of hypermutation in regions of interest across many samples.
}
\details{
The input for this function is a bed-file with the following columns; chr, start, end, name.
Note that for this function to work, the column names must be exactly this.
The user also needs to specify a vector of names (`regions_to_display`) to further control what regions are to be displayed on the returned plot.
It is also possible to exclude specific classifications from the metadata file. This is achieved with `exclude_classifications`.
In addition the user can also use the `metadata` parameter to use an already subset and arranged metadata table.
This function expects the user to provide an already loaded maf as (`this_maf`). 
If you have access to core GAMBLR functions, you can run [GAMBLR::get_ssm_by_regions], 
supplying the `regions_bed` to the `region` parameter of that function to the return the expected data.
}
\examples{
#get data
dohh2_maf = GAMBLR.data::sample_data$grch37$maf \%>\% dplyr::filter(Tumor_Sample_Barcode == "DOHH-2")

#build plot
ashm_multi_rainbow_plot(this_maf = dohh2_maf, 
                        regions_to_display = c("BCL2-TSS", "MYC-TSS", "SGK1-TSS", "IGL"), 
                        custom_colours = get_gambl_colours(classification = "lymphgen"))

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ashm_multi_rainbow_plot.R
\name{ashm_multi_rainbow_plot}
\alias{ashm_multi_rainbow_plot}
\title{ASHM Multi-panel Rainbow Plot}
\usage{
ashm_multi_rainbow_plot(
  regions_bed,
  these_samples_metadata,
  this_seq_type = "genome",
  custom_colours,
  classification_column = "lymphgen",
  maf_data,
  projection = "grch37",
  verbose = FALSE
)
}
\arguments{
\item{regions_bed}{Bed file with chromosome coordinates, should contain columns chr, start, end, name (with these exact names). Not required if selecting from many common regions; bonus regions also exist in grch37.}

\item{these_samples_metadata}{A metadata file already subsetted and arranged on the order you want the samples vertically displayed.}

\item{this_seq_type}{the seqtype you want results back for if `maf_data` is not provided.}

\item{custom_colours}{Provide named vector (or named list of vectors) containing custom annotation colours if you do not want to use standardized pallette.}

\item{classification_column}{Optional. Override default column for assigning the labels used for colouring in the figure.}

\item{maf_data}{An already loaded maf. If not provided, this function will call `get_ssm_by_region`, using the regions supplied into `regions_bed`. Ensure your maf matches the genome projection.}

\item{projection}{Provide genome build; default is grch37. Bonus regions are only available in grch37.}

\item{verbose}{Set to FALSE to prevent printing the full regions bed file to the console. Default is TRUE.}
}
\value{
Nothing
}
\description{
Generates a colourful multi-panel overview of hypermutation in regions of interest across many samples.
}
\details{
The input for this function is a bed-file with the following columns; chr, start, end, name.
Note that for this function to work, the column names must be exactly this.
The user also needs to specify a vector of names (`regions_to_display`) to further control what regions are to be displayed on the returned plot.
It is also possible to exclude specific classifications from the metadata file. This is achieved with `exclude_classifications`.
In addition the user can also use the `metadata` parameter to use an already subset and arranged metadata table.
This function will try to obtain mutations internally if `maf_data` is not given.
For more info, refer to the parameter descriptions of this function.
}
\examples{

suppressMessages(library(GAMBLR.open))
#get lymphgen colours
lymphgen_colours = GAMBLR.helpers::get_gambl_colours("lymphgen")

metadata = suppressMessages(GAMBLR.open::get_gambl_metadata()) \%>\% 
          dplyr::filter(pathology=="DLBCL",
                 seq_type=="genome") \%>\% 
          dplyr::arrange(lymphgen)
metadata = suppressMessages(check_and_clean_metadata(metadata,
                            duplicate_action ="keep_first"))
regions_bed = GAMBLR.utils::create_bed_data(grch37_ashm_regions,
                              fix_names = "concat",
                              concat_cols = c("gene","region"))
regions_bed = dplyr::filter(regions_bed,grepl("BCL6",name))
ashm_multi_rainbow_plot(regions_bed,
                        metadata,
                        custom_colours = lymphgen_colours,
                        verbose = TRUE)

#build plot
\dontrun{
ashm_multi_rainbow_plot(regions_to_display = c("BCL2-TSS",
                                               "MYC-TSS",
                                               "SGK1-TSS",
                                               "IGL"),
                        custom_colours = lymphgen_colours,
                        this_seq_type = "genome")
}

}

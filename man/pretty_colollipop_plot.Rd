% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pretty_colollipop_plot.R
\name{pretty_colollipop_plot}
\alias{pretty_colollipop_plot}
\title{Pretty CoLollipop Plot.}
\usage{
pretty_colollipop_plot(
  maf_df,
  these_samples_metadata,
  comparison_column,
  comparison_values,
  gene,
  label_threshold,
  plot_title,
  refseq_id,
  forestarg = TRUE,
  ...
)
}
\arguments{
\item{maf_df}{A data frame containing the mutation data.}

\item{these_samples_metadata}{Required argument. A data.frame with these_samples_metadata for the CoLollipop Plot.}

\item{comparison_column}{Required: the name of the these_samples_metadata column containing the comparison values.}

\item{comparison_values}{Optional: If the comparison column contains more than two values or is not a factor, specify a character vector of length two in the order you would like the factor levels to be set, reference group first.}

\item{gene}{The gene symbol to plot.}

\item{label_threshold}{Threshold for labels to appear on plot.}

\item{plot_title}{Optional, the title of the plot. Default is gene.}

\item{refseq_id}{Insert a specific NM_xxx value of interest.}

\item{forestarg}{Logical parameter indicating whether to plot the colollipopplot with or without the forest plot. Default is TRUE.}

\item{...}{`pretty_lollipop_plot` arguments, see that function for more info on avaialble parameters.}
}
\value{
A mirrored lollipop plot.
}
\description{
Generates a ggplot-compatible figure of 2 [GAMBLR.viz::pretty_lollipop_plot] mirrored.
}
\details{
Retrieve maf data of a specific sample or a set of samples for comparison. A gene of interest 
can then be visualized with the given maf data files, and comparison commands. Silent mutations can be 
visualized setting include_silent to TRUE.
}
\examples{
library(GAMBLR.open)

#get meta data (DLBCL_Hilton)
meta = GAMBLR.open::get_gambl_metadata()
metadata = dplyr::filter(meta, cohort \%in\% "DLBCL_Hilton")
maf_df = GAMBLR.open::get_coding_ssm(
  these_samples_metadata = metadata
)
pretty_colollipop_plot_result <- pretty_colollipop_plot(maf_df = maf_df,
                                                        these_samples_metadata = metadata,
                                                        comparison_column = "sex",
                                                        comparison_values = c("M", "F"),
                                                        gene = "IGLL5",
                                                        label_threshold = 2)
}

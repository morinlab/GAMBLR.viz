% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fancy_cnbar.R
\name{fancy_cnbar}
\alias{fancy_cnbar}
\title{Copy Number states barplot}
\usage{
fancy_cnbar(
  this_sample_id,
  seg_data,
  seg_path = NULL,
  chrom_col = 2,
  start_col = 3,
  end_col = 4,
  cn_col = 7,
  plot_title = paste0(this_sample_id),
  plot_subtitle =
    "n CNV Segments (barplots, left y-axis), n Affected bases for each CN state",
  chr_select = paste0("chr", c(1:22)),
  cutoff = 15,
  include_cn2 = TRUE,
  this_seq_type = "genome"
)
}
\arguments{
\item{this_sample_id}{Sample to be plotted.}

\item{seg_data}{Optional parameter with copy number df already loaded into R.}

\item{seg_path}{Optional parameter with path to external cn file.}

\item{chrom_col}{Index of column with chromosome annotations (to be used with either maf_data or maf_path).}

\item{start_col}{Index of column with copy number start coordinates (to be used with either maf_data or maf_path).}

\item{end_col}{Index of column with copy number end coordinates (to be used with either maf_data or maf_path).}

\item{cn_col}{Index of column holding copy number information (to be used with either maf_data or maf_path).}

\item{plot_title}{Title of plot (default to sample ID).}

\item{plot_subtitle}{Subtitle for created plot.}

\item{chr_select}{Vector of chromosomes to be included in plot, defaults to autosomes.}

\item{cutoff}{Set threshold for maximum CN state to be retrieved.}

\item{include_cn2}{Optional boolean statement for including CN = 2 states in plot.}

\item{this_seq_type}{Seq type for returned CN segments. One of "genome" (default) or "capture".}
}
\value{
A plot as a ggplot object (grob).
}
\description{
Generate a bar plot visualizing sample-specific copy number states and affected bases for each CN segment.
}
\details{
`fancy_cnbar` visualizes copy number (CN) states on sample-level. Similarly to other fancy_x_plots this function
accepts either a sample ID, for which the function will get copy number states with [GAMBLR::get_sample_cn_segments]. The function
can also accept an already loaded seg file given to the `seg_data` parameter. It can also load a seg file with the `seg_path`
parameter. If the user calls either `seg_data` or `seg_path`, there are a collection of parameters available for specifying
the relevant columns in the given data frame (`chrom_col`, `starat_col`, `end_col`, `cn_col`). It is also possible to
restrict the returned plot to any given chromosome. This is done with the `chr_select` parameter (default is all autosomes).
For further control of the returned plot, it is also possible to set the threshold for maximum CN states to be returned (default is 15).
With `include_cn2` (Boolean) the user can control if CN segments = 2 should be added to the plot, default is TRUE.
The user can also control the annotations of the returned plot with `plot_title` and `plot_subtitle`. Lastly,
This function also computes the number of affected bases for each copy number state and plots these values on a secondary y-axis (right),
useful for overviewing the extent of each copy number state, in the context of the full genome.
}
\examples{
library(GAMBLR.data)

#Return a plot for one sample, with default parameters.
my_plot = fancy_cnbar(this_sample_id = "DOHH-2")

}

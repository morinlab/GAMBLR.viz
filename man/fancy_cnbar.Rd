% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fancy_cnbar.R
\name{fancy_cnbar}
\alias{fancy_cnbar}
\title{Copy Number states barplot}
\usage{
fancy_cnbar(
  this_seg,
  this_seg_path = NULL,
  plot_title = paste0("Copy Number Segments"),
  plot_subtitle =
    "n CNV Segments (barplots, left y-axis), n Affected bases for each CN state",
  chr_select = paste0("chr", c(1:22)),
  cutoff = 15,
  include_cn2 = TRUE
)
}
\arguments{
\item{this_seg}{An already loaded SEG file. This function is compatible with the return of `get_sample_cn_segments` from GAMBLR.}

\item{this_seg_path}{An absolute path to a SEG file. This function is compatible with the return of `get_sample_cn_segments` from GAMBLR..}

\item{plot_title}{Title of plot (default to sample ID).}

\item{plot_subtitle}{Subtitle for created plot.}

\item{chr_select}{Vector of chromosomes to be included in plot, defaults to autosomes.}

\item{cutoff}{Set threshold for maximum CN state to be retrieved.}

\item{include_cn2}{Optional Boolean statement for including CN = 2 states in plot.}
}
\value{
A plot as a ggplot object (grob).
}
\description{
Generate a bar plot visualizing sample-specific copy number states and affected bases for each CN segment.
}
\details{
`fancy_cnbar` visualizes copy number (CN) states on sample-level. This function expects an already loaded SEG file with the `this_seg` parameter.
Such a seg file can be retrieved with `get_sample_cn_segments` in GAMBLR. It is also possible to specify the absolute path to such a SEG file with `this_seg_path`.
The returned plot can also be restricted to any given chromosome. This is done with the `chr_select` parameter (default is all autosomes).
For further control of the returned plot, it is also possible to set the threshold for maximum CN states to be returned (default is 15).
With `include_cn2` (Boolean) the user can control if CN segments = 2 should be added to the plot, default is TRUE.
The user can also control the annotations of the returned plot with `plot_title` and `plot_subtitle`. Lastly,
This function also computes the number of affected bases for each copy number state and plots these values on a secondary y-axis (right),
useful for overview the extent of each copy number state, in the context of the full genome.
}
\examples{
#get data
dohh2_seg = GAMBLR.data::sample_data$grch37$seg \%>\% dplyr::filter(ID == "DOHH-2")

#build plot
fancy_cnbar(this_seg = dohh2_seg, include_cn2 = FALSE)

}

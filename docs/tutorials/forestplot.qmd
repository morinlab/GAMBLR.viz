---
title: "Tutorial: The prettiest forestplot"
warning: false
message: false
fig.width: 8
fig.height: 5
fig.align: "center"
---

One of the integral parts of this package is the analysis and display of the
differences in the frequency of mutations for two different groups in a given
cohort. Because it is easy to use, conducts flexible comparisons, and generates
easy-to-follow display items, it is called `prettyForestPlot` and it belongs to
the `pretty` family of GAMBLR.viz functions.
There is no specific formatting or data preparation needed for the analysis and
visualization, and the only required inputs are the mutation data (can be maf
format or binary feature matrix), metadata (containing sample identifiers in
`sample_id` column and annotation of the group that will be used in comparison),
and a character of the column name in metadata where the sample annotations are
specified.
This tutorial will demonstate the example of the inputs and showcase the main
features of this function.

## Prepare setup

We will first import the necessary packages:

```{r load_packages}
# Load packages
library(GAMBLR.data)
library(GAMBLR.viz)
library(dplyr)
```

Next, we will get some data to display. The metadata is expected to be a data
frame with one required column: `sample_id` and another column that will contain
sample annotations according to the comparison group. In this example, we will
use as example the data set and variant calls from the
[study](https://doi.org/10.1182/blood.2022016534) that identified
genetic subgroup of Burkitt lymphoma (BL).

```{r get_metadata}
metadata <- get_gambl_metadata() %>%
    filter(cohort == "BL_Thomas")
```

Next, we will obtain the coding mutations that will be used in the plotting.
The data is a data frame in a standartized maf format.

```{r get_maf}
maf <- get_ssm_by_samples(
    these_samples_metadata = metadata,
    tool_name = "publication",
    projection = "hg38"
)

# How does it look like?
dim(maf)

head(maf) %>%
    select(
        Tumor_Sample_Barcode,
        Hugo_Symbol,
        Variant_Classification
    )
```

For the purpose of this tutorial, we will focus on a small subset of genes known
to be significantly mutated in BL.

```{r goi}
genes <- lymphoma_genes_bl_v_latest$Gene
head(genes)
```

Now we have our metadata and mutations we want to explore, so we are ready to
start visualizing the data.

## The default forest plot

The forest plot is ready to be called with the default parameters after just
providing the metadata and data frame with mutations in standard maf format.
Here is an example of the output with all default parameters:

```{r default}
#| fig-width: 10
#| fig-height: 15
comparison_column <- "EBV_status_inf" # character of column name for comparison
fp <- prettyForestPlot(
    metadata = metadata,
    maf = maf,
    genes = genes,
    comparison_column = comparison_column
)
```

The output of the function is a list containing the following objects:
- `fisher`: a data frame with detailed statistics of the Fisher's test for each
gene
- `mutmat`: a binary matrix used for the Fisher's test
- `forest`: a ggplot2 object with the forest plot of the ORs from the Fisher's
test for each gene
- `bar`: a ggplot2 object wiht mutation frequencies for each Gene
- `arranged`: a display item where both the forest and bar plots are nicely
arranged side-by-side

```{r}
names(fp)
```

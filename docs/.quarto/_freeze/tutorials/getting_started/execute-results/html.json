{
  "hash": "ce2de75dbb22598fb203fe367c2f085a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tutorial: Getting started\"\nfrom: markdown+emoji\nwarning: false\nfig.width: 7\nfig.height: 5\nfig.align: \"center\"\n---\n\n\n\nThis is a quick tour of some basic commands and usage patterns, just to get you\nstarted.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(GAMBLR.open)\nlibrary(tidyverse)\n```\n:::\n\n\n\nThis tutorial explores how to generate some basic and most common plots,\ncommonly occurring arguments across different functions, best practices and\nrecommendations in the scope of visualizing data.\n\n## What are standartized colours?\nFirst, let's explore the standartized color pallettes in the GAMBLR.viz. They\nare stored as list in one of the GAMBLR.viz dependencies\n([GAMBLR.helpers](https://github.com/morinlab/GAMBLR.helpers/blob/master/R/get_gambl_colours.R))\nand are an integral part of visualizations.\nFor demonstration purposes, we will obtain all of the standartized colours:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_c <- get_gambl_colours(\n    as_dataframe = TRUE\n)\n```\n:::\n\n\n\nWhat are the colours available?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(all_c)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t328 obs. of  3 variables:\n $ group : chr  \"chromosome\" \"chromosome\" \"chromosome\" \"chromosome\" ...\n $ name  : chr  \"chr1\" \"chr2\" \"chr3\" \"chr4\" ...\n $ colour: chr  \"#555FAB\" \"#CE3D31\" \"#749B58\" \"#F0E584\" ...\n```\n\n\n:::\n:::\n\n\n\nWhat are the colour groups?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(all_c$group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n       aneuploidy                BL             blood chapuy_classifier \n                8                 7                15                 6 \n       chromosome          clinical            cohort               coo \n               23                47                16                12 \n      copy_number           domains               EBV                FL \n               17                24                 4                 3 \n genetic_subgroup              hmrn            indels   lacy_classifier \n               24                 8                 2                 8 \n         lymphgen    lymphgenerator          mutation         pathology \n               14                10                15                32 \n          pos_neg          rainfall          seq_type               sex \n               13                 7                 3                 6 \n              svs              type \n                2                 2 \n```\n\n\n:::\n:::\n\n\n\nMany of these colours are conviniently provided for you to ensure consistency\nthat is independent of formatting and case: for example, when the color for\nDLBCL COO is returned, the same color will be used for `UNCLASS`, `U`, `UNC`,\n`Unclassified` etc.\n\nJust for the purpose of this guide, we will define a simple function to display\nsome of these colour pallettes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_col <- function(data, group){\n    data %>%\n        filter(\n            !!sym(\"group\") == {{group}}\n        ) %>%\n        ggplot(\n            aes(\n                x = name,\n                y = 0,\n                fill = colour,\n                label = name\n            )\n        ) +\n        geom_tile(width = 0.9, height = 1) +\n        geom_text(color = \"white\", fontface=\"bold\") +\n        scale_fill_identity(guide = \"none\") +\n        coord_flip() +\n        theme_void() +\n        labs(title = toupper(group)) +\n        theme(plot.title = element_text(lineheight = 0.9,hjust=0.5,face=\"bold\"))\n}\n```\n:::\n\n\n\n## Hex codes for B-cell lymphomas\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_col(all_c, \"pathology\")\n```\n\n::: {.cell-output-display}\n![](getting_started_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Hex codes for genetic subgroups\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_col(all_c, \"genetic_subgroup\")\n```\n\n::: {.cell-output-display}\n![](getting_started_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Hex codes for clinical variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_col(all_c, \"clinical\")\n```\n\n::: {.cell-output-display}\n![](getting_started_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Hex codes for Mutation types\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshow_col(all_c, \"mutation\")\n```\n\n::: {.cell-output-display}\n![](getting_started_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "getting_started_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}